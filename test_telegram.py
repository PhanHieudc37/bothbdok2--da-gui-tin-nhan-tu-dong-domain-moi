#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Test k·∫øt n·ªëi Telegram Bot
"""

import asyncio
import aiohttp
import time

class TelegramTester:
    def __init__(self):
        self.telegram_token = "7581650289:AAFpcYzuxp1grrOKjZBV1HBx9AImvyilIt8"
        self.telegram_chat_id = "7159305763"
        self.telegram_api_url = f"https://api.telegram.org/bot{self.telegram_token}"
    
    async def test_connection(self):
        """Test k·∫øt n·ªëi ƒë·∫øn Telegram Bot"""
        print("=== TEST K·∫æT N·ªêI TELEGRAM BOT ===\n")
        
        try:
            async with aiohttp.ClientSession() as session:
                # Test 1: Ki·ªÉm tra th√¥ng tin bot
                print("1. Ki·ªÉm tra th√¥ng tin bot...")
                async with session.get(f"{self.telegram_api_url}/getMe") as response:
                    if response.status == 200:
                        bot_info = await response.json()
                        print(f"‚úÖ Bot name: {bot_info['result']['first_name']}")
                        print(f"‚úÖ Bot username: @{bot_info['result']['username']}")
                    else:
                        print(f"‚ùå L·ªói: {response.status}")
                        return False
                
                # Test 2: G·ª≠i tin nh·∫Øn test
                print("\n2. G·ª≠i tin nh·∫Øn test...")
                test_message = f"üß™ <b>TEST K·∫æT N·ªêI TELEGRAM BOT</b>\n\n"
                test_message += f"‚úÖ K·∫øt n·ªëi th√†nh c√¥ng!\n"
                test_message += f"‚è∞ Th·ªùi gian: {time.strftime('%Y-%m-%d %H:%M:%S')}\n"
                test_message += f"ü§ñ Bot ƒë√£ s·∫µn s√†ng nh·∫≠n th√¥ng b√°o domain m·ªõi!"
                
                payload = {
                    'chat_id': self.telegram_chat_id,
                    'text': test_message,
                    'parse_mode': 'HTML'
                }
                
                async with session.post(
                    f"{self.telegram_api_url}/sendMessage",
                    json=payload,
                    timeout=aiohttp.ClientTimeout(total=10)
                ) as response:
                    if response.status == 200:
                        print("‚úÖ ƒê√£ g·ª≠i tin nh·∫Øn test th√†nh c√¥ng!")
                        result = await response.json()
                        print(f"‚úÖ Message ID: {result['result']['message_id']}")
                    else:
                        print(f"‚ùå L·ªói g·ª≠i tin nh·∫Øn: {response.status}")
                        error_text = await response.text()
                        print(f"‚ùå Chi ti·∫øt: {error_text}")
                        return False
                
                # Test 3: G·ª≠i th√¥ng b√°o domain m·ªõi m·∫´u
                print("\n3. G·ª≠i th√¥ng b√°o domain m·ªõi m·∫´u...")
                sample_domains = [
                    {'name': 'example1.com', 'price': '88'},
                    {'name': 'test-domain.cn', 'price': '150'},
                    {'name': 'demo-site.net', 'price': '299'}
                ]
                
                domain_message = f"üîî <b>DOMAIN M·ªöI PH√ÅT HI·ªÜN!</b>\n\n"
                domain_message += f"üìä T·ªïng c·ªông: <b>{len(sample_domains)}</b> domain m·ªõi\n\n"
                
                for i, domain in enumerate(sample_domains, 1):
                    name = domain['name']
                    price = domain['price']
                    domain_message += f"{i}. <code>{name}</code> - <b>Ôø•{price}</b>\n"
                
                domain_message += f"\n‚è∞ Th·ªùi gian: {time.strftime('%Y-%m-%d %H:%M:%S')}"
                
                payload = {
                    'chat_id': self.telegram_chat_id,
                    'text': domain_message,
                    'parse_mode': 'HTML'
                }
                
                async with session.post(
                    f"{self.telegram_api_url}/sendMessage",
                    json=payload,
                    timeout=aiohttp.ClientTimeout(total=10)
                ) as response:
                    if response.status == 200:
                        print("‚úÖ ƒê√£ g·ª≠i th√¥ng b√°o domain m·∫´u th√†nh c√¥ng!")
                    else:
                        print(f"‚ùå L·ªói g·ª≠i th√¥ng b√°o domain: {response.status}")
                        return False
                
                print("\n=== HO√ÄN TH√ÄNH TEST ===")
                print("‚úÖ Telegram Bot ƒë√£ s·∫µn s√†ng!")
                print("üöÄ B·∫°n c√≥ th·ªÉ ch·∫°y ch∆∞∆°ng tr√¨nh ch√≠nh: python 22cn.py")
                return True
                
        except Exception as e:
            print(f"‚ùå L·ªói k·∫øt n·ªëi: {e}")
            return False

async def main():
    tester = TelegramTester()
    await tester.test_connection()

if __name__ == "__main__":
    asyncio.run(main())
